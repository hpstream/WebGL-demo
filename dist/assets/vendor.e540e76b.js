function X(o,e,s){if(o&&o.length){const[t,n]=e,a=Math.PI/180*s,r=Math.cos(a),h=Math.sin(a);o.forEach(l=>{const[p,i]=l;l[0]=(p-t)*r-(i-n)*h+t,l[1]=(p-t)*h+(i-n)*r+n})}}function U(o){const e=o[0],s=o[1];return Math.sqrt(Math.pow(e[0]-s[0],2)+Math.pow(e[1]-s[1],2))}function q(o,e){const s=e.hachureAngle+90;let t=e.hachureGap;t<0&&(t=4*e.strokeWidth),t=Math.max(t,.1);const n=[0,0];if(s)for(const r of o)X(r,n,s);const a=function(r,h){const l=[];for(const u of r){const c=[...u];c[0].join(",")!==c[c.length-1].join(",")&&c.push([c[0][0],c[0][1]]),c.length>2&&l.push(c)}const p=[];h=Math.max(h,.1);const i=[];for(const u of l)for(let c=0;c<u.length-1;c++){const M=u[c],g=u[c+1];if(M[1]!==g[1]){const k=Math.min(M[1],g[1]);i.push({ymin:k,ymax:Math.max(M[1],g[1]),x:k===M[1]?M[0]:g[0],islope:(g[0]-M[0])/(g[1]-M[1])})}}if(i.sort((u,c)=>u.ymin<c.ymin?-1:u.ymin>c.ymin?1:u.x<c.x?-1:u.x>c.x?1:u.ymax===c.ymax?0:(u.ymax-c.ymax)/Math.abs(u.ymax-c.ymax)),!i.length)return p;let d=[],f=i[0].ymin;for(;d.length||i.length;){if(i.length){let u=-1;for(let c=0;c<i.length&&!(i[c].ymin>f);c++)u=c;i.splice(0,u+1).forEach(c=>{d.push({s:f,edge:c})})}if(d=d.filter(u=>!(u.edge.ymax<=f)),d.sort((u,c)=>u.edge.x===c.edge.x?0:(u.edge.x-c.edge.x)/Math.abs(u.edge.x-c.edge.x)),d.length>1)for(let u=0;u<d.length;u+=2){const c=u+1;if(c>=d.length)break;const M=d[u].edge,g=d[c].edge;p.push([[Math.round(M.x),f],[Math.round(g.x),f]])}f+=h,d.forEach(u=>{u.edge.x=u.edge.x+h*u.edge.islope})}return p}(o,t);if(s){for(const r of o)X(r,n,-s);(function(r,h,l){const p=[];r.forEach(i=>p.push(...i)),X(p,h,l)})(a,n,-s)}return a}class nt{constructor(e){this.helper=e}fillPolygons(e,s){return this._fillPolygons(e,s)}_fillPolygons(e,s){const t=q(e,s);return{type:"fillSketch",ops:this.renderLines(t,s)}}renderLines(e,s){const t=[];for(const n of e)t.push(...this.helper.doubleLineOps(n[0][0],n[0][1],n[1][0],n[1][1],s));return t}}class mt extends nt{fillPolygons(e,s){let t=s.hachureGap;t<0&&(t=4*s.strokeWidth),t=Math.max(t,.1);const n=q(e,Object.assign({},s,{hachureGap:t})),a=Math.PI/180*s.hachureAngle,r=[],h=.5*t*Math.cos(a),l=.5*t*Math.sin(a);for(const[p,i]of n)U([p,i])&&r.push([[p[0]-h,p[1]+l],[...i]],[[p[0]+h,p[1]-l],[...i]]);return{type:"fillSketch",ops:this.renderLines(r,s)}}}class wt extends nt{fillPolygons(e,s){const t=this._fillPolygons(e,s),n=Object.assign({},s,{hachureAngle:s.hachureAngle+90}),a=this._fillPolygons(e,n);return t.ops=t.ops.concat(a.ops),t}}class xt{constructor(e){this.helper=e}fillPolygons(e,s){const t=q(e,s=Object.assign({},s,{hachureAngle:0}));return this.dotsOnLines(t,s)}dotsOnLines(e,s){const t=[];let n=s.hachureGap;n<0&&(n=4*s.strokeWidth),n=Math.max(n,.1);let a=s.fillWeight;a<0&&(a=s.strokeWidth/2);const r=n/4;for(const h of e){const l=U(h),p=l/n,i=Math.ceil(p)-1,d=l-i*n,f=(h[0][0]+h[1][0])/2-n/4,u=Math.min(h[0][1],h[1][1]);for(let c=0;c<i;c++){const M=u+d+c*n,g=f-r+2*Math.random()*r,k=M-r+2*Math.random()*r,y=this.helper.ellipse(g,k,a,a,s);t.push(...y.ops)}}return{type:"fillSketch",ops:t}}}class Pt{constructor(e){this.helper=e}fillPolygons(e,s){const t=q(e,s);return{type:"fillSketch",ops:this.dashedLine(t,s)}}dashedLine(e,s){const t=s.dashOffset<0?s.hachureGap<0?4*s.strokeWidth:s.hachureGap:s.dashOffset,n=s.dashGap<0?s.hachureGap<0?4*s.strokeWidth:s.hachureGap:s.dashGap,a=[];return e.forEach(r=>{const h=U(r),l=Math.floor(h/(t+n)),p=(h+n-l*(t+n))/2;let i=r[0],d=r[1];i[0]>d[0]&&(i=r[1],d=r[0]);const f=Math.atan((d[1]-i[1])/(d[0]-i[0]));for(let u=0;u<l;u++){const c=u*(t+n),M=c+t,g=[i[0]+c*Math.cos(f)+p*Math.cos(f),i[1]+c*Math.sin(f)+p*Math.sin(f)],k=[i[0]+M*Math.cos(f)+p*Math.cos(f),i[1]+M*Math.sin(f)+p*Math.sin(f)];a.push(...this.helper.doubleLineOps(g[0],g[1],k[0],k[1],s))}}),a}}class vt{constructor(e){this.helper=e}fillPolygons(e,s){const t=s.hachureGap<0?4*s.strokeWidth:s.hachureGap,n=s.zigzagOffset<0?t:s.zigzagOffset,a=q(e,s=Object.assign({},s,{hachureGap:t+n}));return{type:"fillSketch",ops:this.zigzagLines(a,n,s)}}zigzagLines(e,s,t){const n=[];return e.forEach(a=>{const r=U(a),h=Math.round(r/(2*s));let l=a[0],p=a[1];l[0]>p[0]&&(l=a[1],p=a[0]);const i=Math.atan((p[1]-l[1])/(p[0]-l[0]));for(let d=0;d<h;d++){const f=2*d*s,u=2*(d+1)*s,c=Math.sqrt(2*Math.pow(s,2)),M=[l[0]+f*Math.cos(i),l[1]+f*Math.sin(i)],g=[l[0]+u*Math.cos(i),l[1]+u*Math.sin(i)],k=[M[0]+c*Math.cos(i+Math.PI/4),M[1]+c*Math.sin(i+Math.PI/4)];n.push(...this.helper.doubleLineOps(M[0],M[1],k[0],k[1],t),...this.helper.doubleLineOps(k[0],k[1],g[0],g[1],t))}}),n}}const x={};class Ot{constructor(e){this.seed=e}next(){return this.seed?(2**31-1&(this.seed=Math.imul(48271,this.seed)))/2**31:Math.random()}}const F={A:7,a:7,C:6,c:6,H:1,h:1,L:2,l:2,M:2,m:2,Q:4,q:4,S:4,s:4,T:2,t:2,V:1,v:1,Z:0,z:0};function Y(o,e){return o.type===e}function tt(o){const e=[],s=function(r){const h=new Array;for(;r!=="";)if(r.match(/^([ \t\r\n,]+)/))r=r.substr(RegExp.$1.length);else if(r.match(/^([aAcChHlLmMqQsStTvVzZ])/))h[h.length]={type:0,text:RegExp.$1},r=r.substr(RegExp.$1.length);else{if(!r.match(/^(([-+]?[0-9]+(\.[0-9]*)?|[-+]?\.[0-9]+)([eE][-+]?[0-9]+)?)/))return[];h[h.length]={type:1,text:`${parseFloat(RegExp.$1)}`},r=r.substr(RegExp.$1.length)}return h[h.length]={type:2,text:""},h}(o);let t="BOD",n=0,a=s[n];for(;!Y(a,2);){let r=0;const h=[];if(t==="BOD"){if(a.text!=="M"&&a.text!=="m")return tt("M0,0"+o);n++,r=F[a.text],t=a.text}else Y(a,1)?r=F[t]:(n++,r=F[a.text],t=a.text);if(!(n+r<s.length))throw new Error("Path data ended short");for(let l=n;l<n+r;l++){const p=s[l];if(!Y(p,1))throw new Error("Param not a number: "+t+","+p.text);h[h.length]=+p.text}if(typeof F[t]!="number")throw new Error("Bad segment: "+t);{const l={key:t,data:h};e.push(l),n+=r,a=s[n],t==="M"&&(t="L"),t==="m"&&(t="l")}}return e}function ht(o){let e=0,s=0,t=0,n=0;const a=[];for(const{key:r,data:h}of o)switch(r){case"M":a.push({key:"M",data:[...h]}),[e,s]=h,[t,n]=h;break;case"m":e+=h[0],s+=h[1],a.push({key:"M",data:[e,s]}),t=e,n=s;break;case"L":a.push({key:"L",data:[...h]}),[e,s]=h;break;case"l":e+=h[0],s+=h[1],a.push({key:"L",data:[e,s]});break;case"C":a.push({key:"C",data:[...h]}),e=h[4],s=h[5];break;case"c":{const l=h.map((p,i)=>i%2?p+s:p+e);a.push({key:"C",data:l}),e=l[4],s=l[5];break}case"Q":a.push({key:"Q",data:[...h]}),e=h[2],s=h[3];break;case"q":{const l=h.map((p,i)=>i%2?p+s:p+e);a.push({key:"Q",data:l}),e=l[2],s=l[3];break}case"A":a.push({key:"A",data:[...h]}),e=h[5],s=h[6];break;case"a":e+=h[5],s+=h[6],a.push({key:"A",data:[h[0],h[1],h[2],h[3],h[4],e,s]});break;case"H":a.push({key:"H",data:[...h]}),e=h[0];break;case"h":e+=h[0],a.push({key:"H",data:[e]});break;case"V":a.push({key:"V",data:[...h]}),s=h[0];break;case"v":s+=h[0],a.push({key:"V",data:[s]});break;case"S":a.push({key:"S",data:[...h]}),e=h[2],s=h[3];break;case"s":{const l=h.map((p,i)=>i%2?p+s:p+e);a.push({key:"S",data:l}),e=l[2],s=l[3];break}case"T":a.push({key:"T",data:[...h]}),e=h[0],s=h[1];break;case"t":e+=h[0],s+=h[1],a.push({key:"T",data:[e,s]});break;case"Z":case"z":a.push({key:"Z",data:[]}),e=t,s=n}return a}function rt(o){const e=[];let s="",t=0,n=0,a=0,r=0,h=0,l=0;for(const{key:p,data:i}of o){switch(p){case"M":e.push({key:"M",data:[...i]}),[t,n]=i,[a,r]=i;break;case"C":e.push({key:"C",data:[...i]}),t=i[4],n=i[5],h=i[2],l=i[3];break;case"L":e.push({key:"L",data:[...i]}),[t,n]=i;break;case"H":t=i[0],e.push({key:"L",data:[t,n]});break;case"V":n=i[0],e.push({key:"L",data:[t,n]});break;case"S":{let d=0,f=0;s==="C"||s==="S"?(d=t+(t-h),f=n+(n-l)):(d=t,f=n),e.push({key:"C",data:[d,f,...i]}),h=i[0],l=i[1],t=i[2],n=i[3];break}case"T":{const[d,f]=i;let u=0,c=0;s==="Q"||s==="T"?(u=t+(t-h),c=n+(n-l)):(u=t,c=n);const M=t+2*(u-t)/3,g=n+2*(c-n)/3,k=d+2*(u-d)/3,y=f+2*(c-f)/3;e.push({key:"C",data:[M,g,k,y,d,f]}),h=u,l=c,t=d,n=f;break}case"Q":{const[d,f,u,c]=i,M=t+2*(d-t)/3,g=n+2*(f-n)/3,k=u+2*(d-u)/3,y=c+2*(f-c)/3;e.push({key:"C",data:[M,g,k,y,u,c]}),h=d,l=f,t=u,n=c;break}case"A":{const d=Math.abs(i[0]),f=Math.abs(i[1]),u=i[2],c=i[3],M=i[4],g=i[5],k=i[6];d===0||f===0?(e.push({key:"C",data:[t,n,g,k,g,k]}),t=g,n=k):(t!==g||n!==k)&&(dt(t,n,g,k,d,f,u,c,M).forEach(function(y){e.push({key:"C",data:y})}),t=g,n=k);break}case"Z":e.push({key:"Z",data:[]}),t=a,n=r}s=p}return e}function G(o,e,s){return[o*Math.cos(s)-e*Math.sin(s),o*Math.sin(s)+e*Math.cos(s)]}function dt(o,e,s,t,n,a,r,h,l,p){const i=(d=r,Math.PI*d/180);var d;let f=[],u=0,c=0,M=0,g=0;if(p)[u,c,M,g]=p;else{[o,e]=G(o,e,-i),[s,t]=G(s,t,-i);const S=(o-s)/2,w=(e-t)/2;let A=S*S/(n*n)+w*w/(a*a);A>1&&(A=Math.sqrt(A),n*=A,a*=A);const z=n*n,E=a*a,bt=z*E-z*w*w-E*S*S,yt=z*w*w+E*S*S,ot=(h===l?-1:1)*Math.sqrt(Math.abs(bt/yt));M=ot*n*w/a+(o+s)/2,g=ot*-a*S/n+(e+t)/2,u=Math.asin(parseFloat(((e-g)/a).toFixed(9))),c=Math.asin(parseFloat(((t-g)/a).toFixed(9))),o<M&&(u=Math.PI-u),s<M&&(c=Math.PI-c),u<0&&(u=2*Math.PI+u),c<0&&(c=2*Math.PI+c),l&&u>c&&(u-=2*Math.PI),!l&&c>u&&(c-=2*Math.PI)}let k=c-u;if(Math.abs(k)>120*Math.PI/180){const S=c,w=s,A=t;c=l&&c>u?u+120*Math.PI/180*1:u+120*Math.PI/180*-1,f=dt(s=M+n*Math.cos(c),t=g+a*Math.sin(c),w,A,n,a,r,0,l,[c,S,M,g])}k=c-u;const y=Math.cos(u),O=Math.sin(u),L=Math.cos(c),m=Math.sin(c),P=Math.tan(k/4),I=4/3*n*P,D=4/3*a*P,j=[o,e],T=[o+I*O,e-D*y],_=[s+I*m,t-D*L],at=[s,t];if(T[0]=2*j[0]-T[0],T[1]=2*j[1]-T[1],p)return[T,_,at].concat(f);{f=[T,_,at].concat(f);const S=[];for(let w=0;w<f.length;w+=3){const A=G(f[w][0],f[w][1],i),z=G(f[w+1][0],f[w+1][1],i),E=G(f[w+2][0],f[w+2][1],i);S.push([A[0],A[1],z[0],z[1],E[0],E[1]])}return S}}const St={randOffset:function(o,e){return b(o,e)},randOffsetWithRange:function(o,e,s){return N(o,e,s)},ellipse:function(o,e,s,t,n){const a=Mt(s,t,n);return et(o,e,n,a).opset},doubleLineOps:function(o,e,s,t,n){return C(o,e,s,t,n,!0)}};function gt(o,e,s,t,n){return{type:"path",ops:C(o,e,s,t,n)}}function Q(o,e,s){const t=(o||[]).length;if(t>2){const n=[];for(let a=0;a<t-1;a++)n.push(...C(o[a][0],o[a][1],o[a+1][0],o[a+1][1],s));return e&&n.push(...C(o[t-1][0],o[t-1][1],o[0][0],o[0][1],s)),{type:"path",ops:n}}return t===2?gt(o[0][0],o[0][1],o[1][0],o[1][1],s):{type:"path",ops:[]}}function Lt(o,e,s,t,n){return function(a,r){return Q(a,!0,r)}([[o,e],[o+s,e],[o+s,e+t],[o,e+t]],n)}function Tt(o,e){let s=lt(o,1*(1+.2*e.roughness),e);if(!e.disableMultiStroke){const t=lt(o,1.5*(1+.22*e.roughness),function(n){const a=Object.assign({},n);return a.randomizer=void 0,n.seed&&(a.seed=n.seed+1),a}(e));s=s.concat(t)}return{type:"path",ops:s}}function Mt(o,e,s){const t=Math.sqrt(2*Math.PI*Math.sqrt((Math.pow(o/2,2)+Math.pow(e/2,2))/2)),n=Math.ceil(Math.max(s.curveStepCount,s.curveStepCount/Math.sqrt(200)*t)),a=2*Math.PI/n;let r=Math.abs(o/2),h=Math.abs(e/2);const l=1-s.curveFitting;return r+=b(r*l,s),h+=b(h*l,s),{increment:a,rx:r,ry:h}}function et(o,e,s,t){const[n,a]=ut(t.increment,o,e,t.rx,t.ry,1,t.increment*N(.1,N(.4,1,s),s),s);let r=B(n,null,s);if(!s.disableMultiStroke&&s.roughness!==0){const[h]=ut(t.increment,o,e,t.rx,t.ry,1.5,0,s),l=B(h,null,s);r=r.concat(l)}return{estimatedPoints:a,opset:{type:"path",ops:r}}}function it(o,e,s,t,n,a,r,h,l){const p=o,i=e;let d=Math.abs(s/2),f=Math.abs(t/2);d+=b(.01*d,l),f+=b(.01*f,l);let u=n,c=a;for(;u<0;)u+=2*Math.PI,c+=2*Math.PI;c-u>2*Math.PI&&(u=0,c=2*Math.PI);const M=2*Math.PI/l.curveStepCount,g=Math.min(M/2,(c-u)/2),k=pt(g,p,i,d,f,u,c,1,l);if(!l.disableMultiStroke){const y=pt(g,p,i,d,f,u,c,1.5,l);k.push(...y)}return r&&(h?k.push(...C(p,i,p+d*Math.cos(u),i+f*Math.sin(u),l),...C(p,i,p+d*Math.cos(c),i+f*Math.sin(c),l)):k.push({op:"lineTo",data:[p,i]},{op:"lineTo",data:[p+d*Math.cos(u),i+f*Math.sin(u)]})),{type:"path",ops:k}}function V(o,e){const s=[];for(const t of o)if(t.length){const n=e.maxRandomnessOffset||0,a=t.length;if(a>2){s.push({op:"move",data:[t[0][0]+b(n,e),t[0][1]+b(n,e)]});for(let r=1;r<a;r++)s.push({op:"lineTo",data:[t[r][0]+b(n,e),t[r][1]+b(n,e)]})}}return{type:"fillPath",ops:s}}function $(o,e){return function(s,t){let n=s.fillStyle||"hachure";if(!x[n])switch(n){case"zigzag":x[n]||(x[n]=new mt(t));break;case"cross-hatch":x[n]||(x[n]=new wt(t));break;case"dots":x[n]||(x[n]=new xt(t));break;case"dashed":x[n]||(x[n]=new Pt(t));break;case"zigzag-line":x[n]||(x[n]=new vt(t));break;case"hachure":default:n="hachure",x[n]||(x[n]=new nt(t))}return x[n]}(e,St).fillPolygons(o,e)}function kt(o){return o.randomizer||(o.randomizer=new Ot(o.seed||0)),o.randomizer.next()}function N(o,e,s,t=1){return s.roughness*t*(kt(s)*(e-o)+o)}function b(o,e,s=1){return N(-o,o,e,s)}function C(o,e,s,t,n,a=!1){const r=a?n.disableMultiStrokeFill:n.disableMultiStroke,h=ct(o,e,s,t,n,!0,!1);if(r)return h;const l=ct(o,e,s,t,n,!0,!0);return h.concat(l)}function ct(o,e,s,t,n,a,r){const h=Math.pow(o-s,2)+Math.pow(e-t,2),l=Math.sqrt(h);let p=1;p=l<200?1:l>500?.4:-.0016668*l+1.233334;let i=n.maxRandomnessOffset||0;i*i*100>h&&(i=l/10);const d=i/2,f=.2+.2*kt(n);let u=n.bowing*n.maxRandomnessOffset*(t-e)/200,c=n.bowing*n.maxRandomnessOffset*(o-s)/200;u=b(u,n,p),c=b(c,n,p);const M=[],g=()=>b(d,n,p),k=()=>b(i,n,p),y=n.preserveVertices;return a&&(r?M.push({op:"move",data:[o+(y?0:g()),e+(y?0:g())]}):M.push({op:"move",data:[o+(y?0:b(i,n,p)),e+(y?0:b(i,n,p))]})),r?M.push({op:"bcurveTo",data:[u+o+(s-o)*f+g(),c+e+(t-e)*f+g(),u+o+2*(s-o)*f+g(),c+e+2*(t-e)*f+g(),s+(y?0:g()),t+(y?0:g())]}):M.push({op:"bcurveTo",data:[u+o+(s-o)*f+k(),c+e+(t-e)*f+k(),u+o+2*(s-o)*f+k(),c+e+2*(t-e)*f+k(),s+(y?0:k()),t+(y?0:k())]}),M}function lt(o,e,s){const t=[];t.push([o[0][0]+b(e,s),o[0][1]+b(e,s)]),t.push([o[0][0]+b(e,s),o[0][1]+b(e,s)]);for(let n=1;n<o.length;n++)t.push([o[n][0]+b(e,s),o[n][1]+b(e,s)]),n===o.length-1&&t.push([o[n][0]+b(e,s),o[n][1]+b(e,s)]);return B(t,null,s)}function B(o,e,s){const t=o.length,n=[];if(t>3){const a=[],r=1-s.curveTightness;n.push({op:"move",data:[o[1][0],o[1][1]]});for(let h=1;h+2<t;h++){const l=o[h];a[0]=[l[0],l[1]],a[1]=[l[0]+(r*o[h+1][0]-r*o[h-1][0])/6,l[1]+(r*o[h+1][1]-r*o[h-1][1])/6],a[2]=[o[h+1][0]+(r*o[h][0]-r*o[h+2][0])/6,o[h+1][1]+(r*o[h][1]-r*o[h+2][1])/6],a[3]=[o[h+1][0],o[h+1][1]],n.push({op:"bcurveTo",data:[a[1][0],a[1][1],a[2][0],a[2][1],a[3][0],a[3][1]]})}if(e&&e.length===2){const h=s.maxRandomnessOffset;n.push({op:"lineTo",data:[e[0]+b(h,s),e[1]+b(h,s)]})}}else t===3?(n.push({op:"move",data:[o[1][0],o[1][1]]}),n.push({op:"bcurveTo",data:[o[1][0],o[1][1],o[2][0],o[2][1],o[2][0],o[2][1]]})):t===2&&n.push(...C(o[0][0],o[0][1],o[1][0],o[1][1],s));return n}function ut(o,e,s,t,n,a,r,h){const l=[],p=[];if(h.roughness===0){o/=4,p.push([e+t*Math.cos(-o),s+n*Math.sin(-o)]);for(let i=0;i<=2*Math.PI;i+=o){const d=[e+t*Math.cos(i),s+n*Math.sin(i)];l.push(d),p.push(d)}p.push([e+t*Math.cos(0),s+n*Math.sin(0)]),p.push([e+t*Math.cos(o),s+n*Math.sin(o)])}else{const i=b(.5,h)-Math.PI/2;p.push([b(a,h)+e+.9*t*Math.cos(i-o),b(a,h)+s+.9*n*Math.sin(i-o)]);const d=2*Math.PI+i-.01;for(let f=i;f<d;f+=o){const u=[b(a,h)+e+t*Math.cos(f),b(a,h)+s+n*Math.sin(f)];l.push(u),p.push(u)}p.push([b(a,h)+e+t*Math.cos(i+2*Math.PI+.5*r),b(a,h)+s+n*Math.sin(i+2*Math.PI+.5*r)]),p.push([b(a,h)+e+.98*t*Math.cos(i+r),b(a,h)+s+.98*n*Math.sin(i+r)]),p.push([b(a,h)+e+.9*t*Math.cos(i+.5*r),b(a,h)+s+.9*n*Math.sin(i+.5*r)])}return[p,l]}function pt(o,e,s,t,n,a,r,h,l){const p=a+b(.1,l),i=[];i.push([b(h,l)+e+.9*t*Math.cos(p-o),b(h,l)+s+.9*n*Math.sin(p-o)]);for(let d=p;d<=r;d+=o)i.push([b(h,l)+e+t*Math.cos(d),b(h,l)+s+n*Math.sin(d)]);return i.push([e+t*Math.cos(r),s+n*Math.sin(r)]),i.push([e+t*Math.cos(r),s+n*Math.sin(r)]),B(i,null,l)}function Dt(o,e,s,t,n,a,r,h){const l=[],p=[h.maxRandomnessOffset||1,(h.maxRandomnessOffset||1)+.3];let i=[0,0];const d=h.disableMultiStroke?1:2,f=h.preserveVertices;for(let u=0;u<d;u++)u===0?l.push({op:"move",data:[r[0],r[1]]}):l.push({op:"move",data:[r[0]+(f?0:b(p[0],h)),r[1]+(f?0:b(p[0],h))]}),i=f?[n,a]:[n+b(p[u],h),a+b(p[u],h)],l.push({op:"bcurveTo",data:[o+b(p[u],h),e+b(p[u],h),s+b(p[u],h),t+b(p[u],h),i[0],i[1]]});return l}function R(o){return[...o]}function H(o,e){return Math.pow(o[0]-e[0],2)+Math.pow(o[1]-e[1],2)}function At(o,e,s){const t=H(e,s);if(t===0)return H(o,e);let n=((o[0]-e[0])*(s[0]-e[0])+(o[1]-e[1])*(s[1]-e[1]))/t;return n=Math.max(0,Math.min(1,n)),H(o,W(e,s,n))}function W(o,e,s){return[o[0]+(e[0]-o[0])*s,o[1]+(e[1]-o[1])*s]}function st(o,e,s,t){const n=t||[];if(function(h,l){const p=h[l+0],i=h[l+1],d=h[l+2],f=h[l+3];let u=3*i[0]-2*p[0]-f[0];u*=u;let c=3*i[1]-2*p[1]-f[1];c*=c;let M=3*d[0]-2*f[0]-p[0];M*=M;let g=3*d[1]-2*f[1]-p[1];return g*=g,u<M&&(u=M),c<g&&(c=g),u+c}(o,e)<s){const h=o[e+0];n.length?(a=n[n.length-1],r=h,Math.sqrt(H(a,r))>1&&n.push(h)):n.push(h),n.push(o[e+3])}else{const l=o[e+0],p=o[e+1],i=o[e+2],d=o[e+3],f=W(l,p,.5),u=W(p,i,.5),c=W(i,d,.5),M=W(f,u,.5),g=W(u,c,.5),k=W(M,g,.5);st([l,f,M,k],0,s,n),st([k,g,c,d],0,s,n)}var a,r;return n}function It(o,e){return J(o,0,o.length,e)}function J(o,e,s,t,n){const a=n||[],r=o[e],h=o[s-1];let l=0,p=1;for(let i=e+1;i<s-1;++i){const d=At(o[i],r,h);d>l&&(l=d,p=i)}return Math.sqrt(l)>t?(J(o,e,p+1,t,a),J(o,p,s,t,a)):(a.length||a.push(r),a.push(h)),a}function ft(o,e=.15,s){const t=[],n=(o.length-1)/3;for(let a=0;a<n;a++)st(o,3*a,e,t);return s&&s>0?J(t,0,t.length,s):t}const v="none";class K{constructor(e){this.defaultOptions={maxRandomnessOffset:2,roughness:1,bowing:1,stroke:"#000",strokeWidth:1,curveTightness:0,curveFitting:.95,curveStepCount:9,fillStyle:"hachure",fillWeight:-1,hachureAngle:-41,hachureGap:-1,dashOffset:-1,dashGap:-1,zigzagOffset:-1,seed:0,disableMultiStroke:!1,disableMultiStrokeFill:!1,preserveVertices:!1},this.config=e||{},this.config.options&&(this.defaultOptions=this._o(this.config.options))}static newSeed(){return Math.floor(Math.random()*2**31)}_o(e){return e?Object.assign({},this.defaultOptions,e):this.defaultOptions}_d(e,s,t){return{shape:e,sets:s||[],options:t||this.defaultOptions}}line(e,s,t,n,a){const r=this._o(a);return this._d("line",[gt(e,s,t,n,r)],r)}rectangle(e,s,t,n,a){const r=this._o(a),h=[],l=Lt(e,s,t,n,r);if(r.fill){const p=[[e,s],[e+t,s],[e+t,s+n],[e,s+n]];r.fillStyle==="solid"?h.push(V([p],r)):h.push($([p],r))}return r.stroke!==v&&h.push(l),this._d("rectangle",h,r)}ellipse(e,s,t,n,a){const r=this._o(a),h=[],l=Mt(t,n,r),p=et(e,s,r,l);if(r.fill)if(r.fillStyle==="solid"){const i=et(e,s,r,l).opset;i.type="fillPath",h.push(i)}else h.push($([p.estimatedPoints],r));return r.stroke!==v&&h.push(p.opset),this._d("ellipse",h,r)}circle(e,s,t,n){const a=this.ellipse(e,s,t,t,n);return a.shape="circle",a}linearPath(e,s){const t=this._o(s);return this._d("linearPath",[Q(e,!1,t)],t)}arc(e,s,t,n,a,r,h=!1,l){const p=this._o(l),i=[],d=it(e,s,t,n,a,r,h,!0,p);if(h&&p.fill)if(p.fillStyle==="solid"){const f=Object.assign({},p);f.disableMultiStroke=!0;const u=it(e,s,t,n,a,r,!0,!1,f);u.type="fillPath",i.push(u)}else i.push(function(f,u,c,M,g,k,y){const O=f,L=u;let m=Math.abs(c/2),P=Math.abs(M/2);m+=b(.01*m,y),P+=b(.01*P,y);let I=g,D=k;for(;I<0;)I+=2*Math.PI,D+=2*Math.PI;D-I>2*Math.PI&&(I=0,D=2*Math.PI);const j=(D-I)/y.curveStepCount,T=[];for(let _=I;_<=D;_+=j)T.push([O+m*Math.cos(_),L+P*Math.sin(_)]);return T.push([O+m*Math.cos(D),L+P*Math.sin(D)]),T.push([O,L]),$([T],y)}(e,s,t,n,a,r,p));return p.stroke!==v&&i.push(d),this._d("arc",i,p)}curve(e,s){const t=this._o(s),n=[],a=Tt(e,t);if(t.fill&&t.fill!==v&&e.length>=3){const r=ft(function(h,l=0){const p=h.length;if(p<3)throw new Error("A curve must have at least three points.");const i=[];if(p===3)i.push(R(h[0]),R(h[1]),R(h[2]),R(h[2]));else{const d=[];d.push(h[0],h[0]);for(let c=1;c<h.length;c++)d.push(h[c]),c===h.length-1&&d.push(h[c]);const f=[],u=1-l;i.push(R(d[0]));for(let c=1;c+2<d.length;c++){const M=d[c];f[0]=[M[0],M[1]],f[1]=[M[0]+(u*d[c+1][0]-u*d[c-1][0])/6,M[1]+(u*d[c+1][1]-u*d[c-1][1])/6],f[2]=[d[c+1][0]+(u*d[c][0]-u*d[c+2][0])/6,d[c+1][1]+(u*d[c][1]-u*d[c+2][1])/6],f[3]=[d[c+1][0],d[c+1][1]],i.push(f[1],f[2],f[3])}}return i}(e),10,(1+t.roughness)/2);t.fillStyle==="solid"?n.push(V([r],t)):n.push($([r],t))}return t.stroke!==v&&n.push(a),this._d("curve",n,t)}polygon(e,s){const t=this._o(s),n=[],a=Q(e,!0,t);return t.fill&&(t.fillStyle==="solid"?n.push(V([e],t)):n.push($([e],t))),t.stroke!==v&&n.push(a),this._d("polygon",n,t)}path(e,s){const t=this._o(s),n=[];if(!e)return this._d("path",n,t);e=(e||"").replace(/\n/g," ").replace(/(-\s)/g,"-").replace("/(ss)/g"," ");const a=t.fill&&t.fill!=="transparent"&&t.fill!==v,r=t.stroke!==v,h=!!(t.simplification&&t.simplification<1),l=function(p,i,d){const f=rt(ht(tt(p))),u=[];let c=[],M=[0,0],g=[];const k=()=>{g.length>=4&&c.push(...ft(g,i)),g=[]},y=()=>{k(),c.length&&(u.push(c),c=[])};for(const{key:L,data:m}of f)switch(L){case"M":y(),M=[m[0],m[1]],c.push(M);break;case"L":k(),c.push([m[0],m[1]]);break;case"C":if(!g.length){const P=c.length?c[c.length-1]:M;g.push([P[0],P[1]])}g.push([m[0],m[1]]),g.push([m[2],m[3]]),g.push([m[4],m[5]]);break;case"Z":k(),c.push([M[0],M[1]])}if(y(),!d)return u;const O=[];for(const L of u){const m=It(L,d);m.length&&O.push(m)}return O}(e,1,h?4-4*t.simplification:(1+t.roughness)/2);return a&&(t.fillStyle==="solid"?n.push(V(l,t)):n.push($(l,t))),r&&(h?l.forEach(p=>{n.push(Q(p,!1,t))}):n.push(function(p,i){const d=rt(ht(tt(p))),f=[];let u=[0,0],c=[0,0];for(const{key:M,data:g}of d)switch(M){case"M":{const k=1*(i.maxRandomnessOffset||0),y=i.preserveVertices;f.push({op:"move",data:g.map(O=>O+(y?0:b(k,i)))}),c=[g[0],g[1]],u=[g[0],g[1]];break}case"L":f.push(...C(c[0],c[1],g[0],g[1],i)),c=[g[0],g[1]];break;case"C":{const[k,y,O,L,m,P]=g;f.push(...Dt(k,y,O,L,m,P,c,i)),c=[m,P];break}case"Z":f.push(...C(c[0],c[1],u[0],u[1],i)),c=[u[0],u[1]]}return{type:"path",ops:f}}(e,t))),this._d("path",n,t)}opsToPath(e,s){let t="";for(const n of e.ops){const a=typeof s=="number"&&s>=0?n.data.map(r=>+r.toFixed(s)):n.data;switch(n.op){case"move":t+=`M${a[0]} ${a[1]} `;break;case"bcurveTo":t+=`C${a[0]} ${a[1]}, ${a[2]} ${a[3]}, ${a[4]} ${a[5]} `;break;case"lineTo":t+=`L${a[0]} ${a[1]} `}}return t.trim()}toPaths(e){const s=e.sets||[],t=e.options||this.defaultOptions,n=[];for(const a of s){let r=null;switch(a.type){case"path":r={d:this.opsToPath(a),stroke:t.stroke,strokeWidth:t.strokeWidth,fill:v};break;case"fillPath":r={d:this.opsToPath(a),stroke:v,strokeWidth:0,fill:t.fill||v};break;case"fillSketch":r=this.fillSketch(a,t)}r&&n.push(r)}return n}fillSketch(e,s){let t=s.fillWeight;return t<0&&(t=s.strokeWidth/2),{d:this.opsToPath(e),stroke:s.fill||v,strokeWidth:t,fill:v}}}class Ct{constructor(e,s){this.canvas=e,this.ctx=this.canvas.getContext("2d"),this.gen=new K(s)}draw(e){const s=e.sets||[],t=e.options||this.getDefaultOptions(),n=this.ctx,a=e.options.fixedDecimalPlaceDigits;for(const r of s)switch(r.type){case"path":n.save(),n.strokeStyle=t.stroke==="none"?"transparent":t.stroke,n.lineWidth=t.strokeWidth,t.strokeLineDash&&n.setLineDash(t.strokeLineDash),t.strokeLineDashOffset&&(n.lineDashOffset=t.strokeLineDashOffset),this._drawToContext(n,r,a),n.restore();break;case"fillPath":{n.save(),n.fillStyle=t.fill||"";const h=e.shape==="curve"||e.shape==="polygon"||e.shape==="path"?"evenodd":"nonzero";this._drawToContext(n,r,a,h),n.restore();break}case"fillSketch":this.fillSketch(n,r,t)}}fillSketch(e,s,t){let n=t.fillWeight;n<0&&(n=t.strokeWidth/2),e.save(),t.fillLineDash&&e.setLineDash(t.fillLineDash),t.fillLineDashOffset&&(e.lineDashOffset=t.fillLineDashOffset),e.strokeStyle=t.fill||"",e.lineWidth=n,this._drawToContext(e,s,t.fixedDecimalPlaceDigits),e.restore()}_drawToContext(e,s,t,n="nonzero"){e.beginPath();for(const a of s.ops){const r=typeof t=="number"&&t>=0?a.data.map(h=>+h.toFixed(t)):a.data;switch(a.op){case"move":e.moveTo(r[0],r[1]);break;case"bcurveTo":e.bezierCurveTo(r[0],r[1],r[2],r[3],r[4],r[5]);break;case"lineTo":e.lineTo(r[0],r[1])}}s.type==="fillPath"?e.fill(n):e.stroke()}get generator(){return this.gen}getDefaultOptions(){return this.gen.defaultOptions}line(e,s,t,n,a){const r=this.gen.line(e,s,t,n,a);return this.draw(r),r}rectangle(e,s,t,n,a){const r=this.gen.rectangle(e,s,t,n,a);return this.draw(r),r}ellipse(e,s,t,n,a){const r=this.gen.ellipse(e,s,t,n,a);return this.draw(r),r}circle(e,s,t,n){const a=this.gen.circle(e,s,t,n);return this.draw(a),a}linearPath(e,s){const t=this.gen.linearPath(e,s);return this.draw(t),t}polygon(e,s){const t=this.gen.polygon(e,s);return this.draw(t),t}arc(e,s,t,n,a,r,h=!1,l){const p=this.gen.arc(e,s,t,n,a,r,h,l);return this.draw(p),p}curve(e,s){const t=this.gen.curve(e,s);return this.draw(t),t}path(e,s){const t=this.gen.path(e,s);return this.draw(t),t}}const Z="http://www.w3.org/2000/svg";class _t{constructor(e,s){this.svg=e,this.gen=new K(s)}draw(e){const s=e.sets||[],t=e.options||this.getDefaultOptions(),n=this.svg.ownerDocument||window.document,a=n.createElementNS(Z,"g"),r=e.options.fixedDecimalPlaceDigits;for(const h of s){let l=null;switch(h.type){case"path":l=n.createElementNS(Z,"path"),l.setAttribute("d",this.opsToPath(h,r)),l.setAttribute("stroke",t.stroke),l.setAttribute("stroke-width",t.strokeWidth+""),l.setAttribute("fill","none"),t.strokeLineDash&&l.setAttribute("stroke-dasharray",t.strokeLineDash.join(" ").trim()),t.strokeLineDashOffset&&l.setAttribute("stroke-dashoffset",`${t.strokeLineDashOffset}`);break;case"fillPath":l=n.createElementNS(Z,"path"),l.setAttribute("d",this.opsToPath(h,r)),l.setAttribute("stroke","none"),l.setAttribute("stroke-width","0"),l.setAttribute("fill",t.fill||""),e.shape!=="curve"&&e.shape!=="polygon"||l.setAttribute("fill-rule","evenodd");break;case"fillSketch":l=this.fillSketch(n,h,t)}l&&a.appendChild(l)}return a}fillSketch(e,s,t){let n=t.fillWeight;n<0&&(n=t.strokeWidth/2);const a=e.createElementNS(Z,"path");return a.setAttribute("d",this.opsToPath(s,t.fixedDecimalPlaceDigits)),a.setAttribute("stroke",t.fill||""),a.setAttribute("stroke-width",n+""),a.setAttribute("fill","none"),t.fillLineDash&&a.setAttribute("stroke-dasharray",t.fillLineDash.join(" ").trim()),t.fillLineDashOffset&&a.setAttribute("stroke-dashoffset",`${t.fillLineDashOffset}`),a}get generator(){return this.gen}getDefaultOptions(){return this.gen.defaultOptions}opsToPath(e,s){return this.gen.opsToPath(e,s)}line(e,s,t,n,a){const r=this.gen.line(e,s,t,n,a);return this.draw(r)}rectangle(e,s,t,n,a){const r=this.gen.rectangle(e,s,t,n,a);return this.draw(r)}ellipse(e,s,t,n,a){const r=this.gen.ellipse(e,s,t,n,a);return this.draw(r)}circle(e,s,t,n){const a=this.gen.circle(e,s,t,n);return this.draw(a)}linearPath(e,s){const t=this.gen.linearPath(e,s);return this.draw(t)}polygon(e,s){const t=this.gen.polygon(e,s);return this.draw(t)}arc(e,s,t,n,a,r,h=!1,l){const p=this.gen.arc(e,s,t,n,a,r,h,l);return this.draw(p)}curve(e,s){const t=this.gen.curve(e,s);return this.draw(t)}path(e,s){const t=this.gen.path(e,s);return this.draw(t)}}var Wt={canvas:(o,e)=>new Ct(o,e),svg:(o,e)=>new _t(o,e),generator:o=>new K(o),newSeed:()=>K.newSeed()};export{Wt as U};
