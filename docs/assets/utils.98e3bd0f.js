function x(e,r,a){const t=e.createProgram(),n=h(e,e.VERTEX_SHADER,r),o=h(e,e.FRAGMENT_SHADER,a);return e.attachShader(t,n),e.attachShader(t,o),e.linkProgram(t),e.useProgram(t),t}function h(e,r,a){const t=e.createShader(r);return t&&(e.shaderSource(t,a),e.compileShader(t)),t}function p({clientX:e,clientY:r},a){const{left:t,top:n,width:o,height:i}=a.getBoundingClientRect(),[d,u]=[e-t,r-n],[s,c]=[o/2,i/2],[f,S]=[d-s,u-c],m=-S;return{x:f/s,y:m/c}}function C({x:e,y:r},{width:a,height:t}){const[n,o]=[a/2,t/2];return{x:e*n,y:-r*o}}export{C as a,p as g,x as i};
