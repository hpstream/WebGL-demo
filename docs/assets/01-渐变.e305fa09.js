var f=Object.defineProperty;var h=(n,t,e)=>t in n?f(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e;var i=(n,t,e)=>(h(n,typeof t!="symbol"?t+"":t,e),e);import"./modulepreload-polyfill.b7f2da20.js";import{i as m}from"./utils.98e3bd0f.js";var p=`attribute vec4 a_Position;
void main() {
  gl_Position = a_Position;
}`,_=`precision mediump float;
uniform vec2 u_CanvasSize;
void main() {
  gl_FragColor = vec4( gl_FragCoord.x / u_CanvasSize.x,gl_FragCoord.y / u_CanvasSize.y, 1, 1);
}`;const v=()=>({type:"POINTS",source:[],attributes:{},uniforms:{},maps:{}});class S{constructor(t){i(this,"gl");i(this,"program");i(this,"paintType");i(this,"source");i(this,"attributes");i(this,"uniforms");i(this,"maps");i(this,"categorySize");i(this,"sourceSize");i(this,"categoryBytes");Object.assign(this,v(),t),this.init()}get elementBytes(){return this.source.BYTES_PER_ELEMENT}init(){this.calculateSize(),this.updateAttribute(),this.updateUniform()}calculateSize(){const{attributes:t,elementBytes:e,source:s}=this;let r=0;Object.values(t).forEach(o=>{r+=o.size,o.byteIndex=o.index*e}),this.categorySize=r,this.categoryBytes=r*e,this.sourceSize=s.length/r}updateAttribute(){const{gl:t,attributes:e,categoryBytes:s,source:r,program:o}=this,c=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,c),t.bufferData(t.ARRAY_BUFFER,r,t.STATIC_DRAW);for(const u in e){let{size:l,byteIndex:d}=e[u];const g=t.getAttribLocation(o,u);t.vertexAttribPointer(g,l,t.FLOAT,!1,s,d),t.enableVertexAttribArray(g)}}updateUniform(){const{gl:t,uniforms:e,program:s}=this;for(let r in e){const{type:o,value:c,transpose:u}=e[r],l=t.getUniformLocation(s,r);o.includes("Matrix")?t[o](l,!!u,c):t[o](l,c)}}draw(t=this.paintType){const{gl:e,sourceSize:s}=this;e.drawArrays(e[t],0,s)}}const a=document.querySelector("#canvas");a.width=window.innerWidth;a.height=window.innerHeight;const y=a.getContext("webgl");let b=m(y,p,_);const A=new S({gl:y,program:b,source:new Float32Array([-1,1,-1,-1,1,1,1,-1]),paintType:"TRIANGLE_STRIP",attributes:{a_Position:{size:2,index:0}},uniforms:{u_CanvasSize:{type:"uniform2fv",value:[a.width,a.height]}}});A.draw();
